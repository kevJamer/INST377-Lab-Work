* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  margin: 0;
  padding: 0;
  font-family: ‘Segoe UI’, Candara, ‘Bitstream Vera Sans’, ‘DejaVu Sans’,
    ‘Bitsream Vera Sans’, ‘Trebuchet MS’, Verdana, ‘Verdana Ref’, sans-serif;
  background-color: darkslategray;
}

/* Page Layout */
.columns {
  display: flex;
  flex-wrap: wrap;
}

.wrapper {
  display: flex;
}
.container {
  max-width: 960px;
  margin-top: 25px;
}

/* Page styles */
.top-bar {
  width: 100%;
  display: inline-block;
  background-color: rgba(0, 139, 139, 0.8);
  padding: 10px 15px;
  margin: 0;
}

.menu-container {
  color: #fff;
  background-color: #5995da; /* Blue */
  padding: 20px 0;
  display: flex;
  justify-content: center;
}

.menu-container a {
  color: #fff;
  text-decoration: none;
}

.menu-container a:hover {
  color: #fff;
  text-decoration: underline;
}

.menu {
  border: 1px solid #fff;
  width: 900px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.date {
  margin-left: auto;
}

.links {
  border: 1px solid #fff; /* For debugging */
  display: flex;
  justify-content: flex-end;
}

.links a {
  margin-left: 20px;
}

/* Header */
.header-container {
  color: #5995da;
  background-color: #d6e9fe;
  display: flex;
  justify-content: center;
  align-items: center;
}

.header {
  width: 900px;
  height: 300px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.project-link,
.github {
  align-self: flex-end;
  margin-bottom: 20px;
}

/* Photo Grid */
.photo-grid-container {
  display: flex;
  justify-content: center;
  align-items: center;
}

.photo-grid-item {
  border: 1px solid #fff;
  width: 300px;
  height: 300px;
}

.photo-grid {
  width: 900px;
  display: flex;
  justify-content: center;
  align-items: center;

  flex-wrap: wrap;
  flex-direction: row-reverse;
}

.first-item {
  order: 1;
}

.last-item {
  order: -1;
}

/* Footer */
.footer {
  display: flex;
  justify-content: space-between;
  /* position: absolute;
  bottom: 0;
  width: 100%; */
}

.footer-item {
  border: 1px solid #fff;
  background-color: #d6e9fe;
  height: 200px;
  flex: 1;
}

.footer-one,
.footer-three {
  background-color: #5995da;
  flex: initial;
  width: 300px;
}

* {
  box-sizing: border-box;
}

/* 
  These rules apply to actual HTML elements with no labelling!
  So: they style the tags directly
*/

html {
  background-color: #fff;
  font-size: 16px;
  min-width: 300px;
  overflow-x: hidden;
  overflow-y: scroll;

  /* these are specific to different browsers */
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -webkit-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
  text-size-adjust: 100%;
}

body {
  margin: 0;
  padding: 0;

  font-family: ‘Segoe UI’, Candara, ‘Bitstream Vera Sans’, ‘DejaVu Sans’, ‘Bitsream Vera Sans’, ‘Trebuchet MS’, Verdana, ‘Verdana Ref’, sans-serif;
  font-weight: 400;
  line-height: 1.5;
  background-color: rgb(239, 239, 239);
}


a {
  display: inline-block;
  text-decoration: none;
}

h2 {
  margin:0;
  padding:0;
  padding-bottom:1.5rem;
}


/*
  - These styles use 'class names'
  - You can apply them by using the 'class' attribute on your HTML
  - like this: <div class="wrapper">
  - note that the period vanishes there!
*/


.wrapper {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  margin: 0;
  flex: 1;
}

.container {
  margin: 0 20px;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  flex:1;
}


.header {
  padding-top: 1rem;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-bottom: 1.5rem;
}


/*
  This rule implies that the H1 tag lives within another HTML tag
  It "inherits" some rules from the above
  Those rules won't apply to an h1 that's outside a block with the class of 'header'
*/

.header h1 {
  display: block;
  /* this will push other blocks out of the way */

  /* colors */
  background-color: #ffe08a;
  color: #4a4a4a;

  /* shapes */
  border-radius: 6px;
  font-size: 1.5rem;
  padding: 1.25rem;

  /* box-shadows are fancy */
  box-shadow: 0 0.5em 1em -0.125em rgb(10 10 10 / 10%), 0 0 0 1px rgb(10 10 10 / 2%);
}

ol {
  list-style-type: decimal;
}

li {
  display: list-item;
  text-align: -webkit-match-parent;

}
/*
  Rules can be combined on a block to apply the 'cascade' in order
  So you can use two classnames in a single class attribute
  like: <div class="box section">

  Rules may combine in unexpected ways - remember that the LAST thing written in this file will have "priority"
  And will be what displays in your client
*/

.box {
  background-color: rgba(239, 239, 239, 0.40);
  border: 2px dashed;
  border-radius: 4px;

  width: fit-content;
  height:fit-content;
  padding: 1.5rem;
  margin: 0 auto;
}

.left_section {
  border: 2px dashed;
  padding: 1.5rem;
  background-color: rgba(0, 139, 139, 0.8);
}

.right_section {
  background-color: rgba(255, 224, 138, 0.7);
  border: 1px dashed #000;
  max-width: 450px;
  flex-grow: 2;
}


/*
  This block is actually dependent on the "container" block having a flex set on it
  and the "wrapper" block displaying as a flex column with a "vertical height" (vh) of 100.
  That serves to cram the footer to the bottom of the page.
*/

.footer {
  flex-shrink: 0;
  padding: 1rem;
  background-color: rgba(0, 139, 139, 0.8);
  font-size: 1.2rem;
  font-weight: 600;
}

.footer a {
  color: rgba(255, 224, 138, 1);
  text-decoration: underline;
}

/*
  This is an example of a 'pseudoclass'
  In this instance, it says what to do if a mouse hovers over a link
  This is pretty desktop-specific, since there's no hover function on touchscreens
*/
.footer a:hover {
  background-color: rgba(230,230,230, 0.15);
  color: rgb(246, 169, 93);
  text-decoration: none;
}

.subtitle {
  color: rgba(0, 0, 0, 0.8);
  margin: 0px;
  margin-bottom: 5px;
}

.grid {
  display: flex;
  justify-content: space-evenly;
  flex-flow: wrap;
  width: 350px;
  height: 350px;
  margin: 0 auto;
}

.grid img {
  width: 150px;
  height: 150px;
}



